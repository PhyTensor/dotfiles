
# COLOUR
# set -g default-terminal "screen-256color"
set-option -g default-terminal "screen-256color"
# set-option -sa terminal-overrides ",xterm*:Tc"
set-option -g terminal-overrides ",xterm-256color:RGB"

# SET PREFIX
# Remove the old prefix
unbind C-b
# set the new prefix to Ctrl-q
set -g prefix C-q
# set Ctrl-q to applications by pressing it twice
bind C-q send-prefix

# CONFIG
# Set Fish as defaul shell
set-option -g default-shell /usr/bin/fish

set-option -g status-position bottom

set -g default-terminal "${TERM}"

set -g status on
set -g status-bg default
set -g status-style bg=default


# enable mouse
set -g mouse on

# set history limit
set -g history-limit 1000000

# zero-out escape time delay
set -g escape-time 0

# don't exit from tmux when closing a session
# exit from tmux when closing a session
set -g detach-on-destroy on

# use system clipboard
set -g set-clipboard on

# panes
set -g pane-active-border-style 'fg=magenta,bg=default'
set -g pane-border-style 'fg=brightblack,bg=default'

# Set Vi-Mode
set-window-option -g mode-keys vi

# Start Windows and Panes at 1, not 0
set -g base-index 1
set -g pane-base-index 1
set-window-option -g pane-base-index 1
# renumber all windows whenany window is closed
set-option -g renumber-windows on

# Image preview within TMUX - (yazi)
set -g allow-passthrough on
set -ga update-environment TERM
set -ga update-environment TERM_PROGRAM

# Plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'christoomey/vim-tmux-navigator'
set -g @plugin 'catppuccin/tmux#latest'
# set -g @plugin "janoamaral/tokyo-night-tmux"
# set -g @plugin "nikolovlazar/tokyo-night-tmux"
# set -g @plugin 'dreamsofcode-io/catppuccin-tmux'

# CATPPUCCIN CONFIG
set -g @catppuccin_flavour 'mocha' # latter or frappe, macchiato, mocha
set -g @catppuccin_window_left_separator ""
set -g @catppuccin_window_right_separator " "
set -g @catppuccin_window_middle_separator " █"
set -g @catppuccin_window_number_position "left"
#
set -g @catppuccin_window_default_fill "number"
set -g @catppuccin_window_default_text "#W"
#
set -g @catppuccin_window_current_fill "number"
# set -g @catppuccin_window_current_text "#W"
# set -g @catppuccin_window_current_text "#W#{?window_zoomed_flag,(),}"
# set -g @catppuccin_window_current_background "#{@thm_mauve}"
#
set -g @catppuccin_status_modules_right "directory session date time" # "directory session"
set -g @catppuccin_status_modules_left "session"
set -g @catppuccin_window_status_style "rounded"
set -g @catppuccin_status_left_separator  " "
set -g @catppuccin_status_right_separator ""
set -g @catppuccin_status_right_separator_inverse "no"
set -g @catppuccin_status_fill "icon"
set -g @catppuccin_status_connect_separator "no"

# set -g @catppuccin_directory_text $cwd
set -g @catppuccin_directory_text "#{b:pane_current_path}"

set -g @catppuccin_date_time_text "%H:%M"


# LOAD CATPPUCCIN
# run ~/.config/tmux/plugins/catppuccin/tmux/catppuccin.tmux

# Make the status line pretty and add some modules
set -g status-left ""
# set -g status-right "#{E:@catppuccin_status_user}"
# set -g status-left "#{E:@catppuccin_status_user}"
# set -ag status-right "#{E:@catppuccin_status_directory}"
# set -ag status-left "#{E:@catppuccin_status_directory}"

# # TOKYO-NIGHT THEME CONFIG
# set -g @tokyo-night-tmux_window_id_style fsquare
# set -g @tokyo-night-tmux_pane_id_style hsquare
# set -g @tokyo-night-tmux_zoom_id_style dsquare


# Keybindings
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi C-v send-keys -X rectangle-toggle
bind-key -T copy-mode-vi y send-keys -X copy-selection-and-cancel

# Alt+Shift+Vim Keys to switch windows
# bind -n M-H previous-window
# bind -n M-L next-window

# Shift+Arrow to switch windows
bind -n S-Left previous-window
bind -n S-Right next-window

# Ctrl+Alt+Vim keys to switch windows
bind -n C-M-h previous-window
bind -n C-M-l next-window

# Open panes in current directory
# bind '"' split-window -v -c "#{pane_current_path}"
bind 'v' split-window -v -c "#{pane_current_path}"
# bind % split-window -h -c "#{pane_current_path}"
bind 'h' split-window -h -c "#{pane_current_path}"

# Use Ctrl-arrow keys without prefix key to switch panes
bind -n C-Left select-pane -L
bind -n C-Right select-pane -R
bind -n C-Up select-pane -U
bind -n C-Down select-pane -D
# Use Ctrl-[hjkl] keys without prefix key to switch panes
bind -n C-h select-pane -L
bind -n C-l select-pane -R
bind -n C-k select-pane -U
bind -n C-j select-pane -D

# Windows Switching
# bind -n 'M-1' select-window -t 1
# bind -n 'M-2' select-window -t 2
# bind -n 'M-3' select-window -t 3
# bind -n 'M-4' select-window -t 4
# bind -n 'M-5' select-window -t 5
# bind -n 'M-6' select-window -t 6
# bind -n 'M-7' select-window -t 7
# bind -n 'M-8' select-window -t 8
# bind -n 'M-9' select-window -t 9

is_vim="ps -o state= -o comm= -t '#{pane_tty}' | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?\.?(view|n?vim?x?)(-wrapped)?(diff)?$'"

bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h' { if -F '#{pane_at_left}' '' 'select-pane -L' }
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j' { if -F '#{pane_at_bottom}' '' 'select-pane -D' }
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k' { if -F '#{pane_at_top}' '' 'select-pane -U' }
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l' { if -F '#{pane_at_right}' '' 'select-pane -R' }

bind-key -T copy-mode-vi 'C-h' if -F '#{pane_at_left}' '' 'select-pane -L'
bind-key -T copy-mode-vi 'C-j' if -F '#{pane_at_bottom}' '' 'select-pane -D'
bind-key -T copy-mode-vi 'C-k' if -F '#{pane_at_top}' '' 'select-pane -U'
bind-key -T copy-mode-vi 'C-l' if -F '#{pane_at_right}' '' 'select-pane -R'


# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
# is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
#     | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|l?n?vim?x?|fzf)(diff)?$'"
# bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
# bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
# bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
# bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'
# tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
# if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
#     "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
# if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
#     "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"
#
# bind-key -T copy-mode-vi 'C-h' select-pane -L
# bind-key -T copy-mode-vi 'C-j' select-pane -D
# bind-key -T copy-mode-vi 'C-k' select-pane -U
# bind-key -T copy-mode-vi 'C-l' select-pane -R
# bind-key -T copy-mode-vi 'C-\' select-pane -l


# reload tmux configuration automatically with every change
bind r source-file ~/.config/tmux/tmux.conf \; display "Reloaded tmux config file"

run '~/.config/tmux/plugins/tpm/tpm'

