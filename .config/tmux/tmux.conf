# ==============================================================================
# Tmux Configuration - Minimal, Elegant, and Productive, Cozy & Aesthetic
# ==============================================================================


# Color Definitions (Catppuccin Mocha Inspired)
thm_bg="#1e1e2e"          # Base
thm_text="#cdd6f4"        # Text
thm_overlay_0="#6c7086"   # Overlay 0
thm_overlay_1="#7f849c"   # Overlay 1
thm_surface_0="#313244"   # Surface 0
thm_rosewater="#f5e0dc"   # Rosewater
thm_pink="#f5c2e7"        # Pink
thm_mauve="#cba6f7"       # Mauve
thm_red="#f38ba8"         # Red
thm_peach="#fab387"       # Peach
thm_yellow="#f9e2af"      # Yellow
thm_green="#a6e3a1"       # Green
thm_teal="#94e2d5"        # Teal
thm_sky="#89dceb"         # Sky
thm_blue="#89b4fa"        # Blue
thm_lavender="#b4befe"    # Lavender


# ------------------------------------------------------------------------------
# Core Settings
# ------------------------------------------------------------------------------
set -sg escape-time 10            # Faster command sequence detection
set -g  focus-events on           # Needed for neovim focus events
set -g  default-terminal "tmux-256color" # True color and italic support
set -ga terminal-overrides ",xterm-256color:RGB" # Proper color support

# Unbind default prefix and set Ctrl-Space as new prefix
unbind C-b
set -g prefix C-Space
bind C-Space send-prefix          # Send prefix with Ctrl-Space twice

# ------------------------------------------------------------------------------
# Intuitive Key Bindings
# ------------------------------------------------------------------------------

# Window Management
# bind -n M-h previous-window       # Meta-h: Previous window
# bind -n M-l next-window           # Meta-l: Next window
bind -r C-p previous-window       # Ctrl-p: Previous window (mnemonic: prev)
bind -r C-n next-window           # Ctrl-n: Next window (mnemonic: next)
bind -n S-Left previous-window    # Shift-Left: Previous window
bind -n S-Right next-window       # Shift-Right: Next window
bind -n C-M-h previous-window     # Ctrl-Meta-h: Previous window
bind -n C-M-l next-window         # Ctrl-Meta-l: Next window

# Session Management
bind S command-prompt -p "New session:" "new-session -s '%%'"
bind Q confirm-before "kill-session"

# Pane Management
bind - split-window -v -c "#{pane_current_path}"  # -: Vertical split
bind 'v' split-window -v -c "#{pane_current_path}"  # v: Vertical split
bind _ split-window -h -c "#{pane_current_path}"  # _: Horizontal split
bind 'h' split-window -h -c "#{pane_current_path}"  # h: Horizontal split
bind q kill-pane                 # Kill current pane

# Pane Navigation (Vi-like with Ctrl modifier)
bind -n C-k select-pane -U       # Ctrl-k: Up
bind -n C-j select-pane -D       # Ctrl-j: Down
bind -n C-h select-pane -L       # Ctrl-h: Left
bind -n C-l select-pane -R       # Ctrl-l: Right

# Resize Panes (Meta + Ctrl modifier)
# bind -r M-C-k resize-pane -U 5   # Grow pane up
# bind -r M-C-j resize-pane -D 5   # Grow pane down
# bind -r M-C-h resize-pane -L 5   # Grow pane left
# bind -r M-C-l resize-pane -R 5   # Grow pane right

# Status Bar Toggle
bind-key -T prefix t set-option -g status

# ------------------------------------------------------------------------------
# Status Bar Customization (Elegant & Informative)
# ------------------------------------------------------------------------------
set -g status-interval 60         # Update status every minute
set -g status-justify centre      # left-Left-align window list, "absolute-centre"-centre window list
set -g status-left-length 150     # Longer left status
set -g status-right-length 150    # Longer right status

# Color Scheme (Solarized Dark Inspired)
set -g status-style bg=colour235,fg=colour250
set -g window-status-current-style bg=$thm_bg,fg=$thm_lavender,bold
set -g window-status-format " #I#{?#{!=},: #W,} "
set -g window-status-current-format " #I#{?#{!=},: #W,} "
set -g pane-border-style fg=colour238
set -g pane-active-border-style fg=colour33

# Status Line Layout
set -g status-left ""
set -ga status-left "#[fg=$thm_lavender,bg=$thm_bg]  #[fg=$thm_overlay_0]│"
set -ga status-left "#[fg=$thm_peach,bg=$thm_bg]  #{pane_current_command}│"
# set -ga status-left "#[fg=$thm_sky,bg=$thm_bg]  #{pane_current_path} #[fg=$thm_overlay_0]│"
set -ga status-left "#[fg=$thm_sky,bg=$thm_bg]  #{=/-32/...:#{s|$USER|~|:#{b:pane_current_path}}} #[fg=$thm_overlay_0]│"


set -g status-right ""
set -ga status-right "#[fg=$thm_overlay_0]│ #[fg=$thm_rosewater]󰃰 %d-%m-%Y "
set -ga status-right "#[fg=$thm_overlay_0]│ #[fg=$thm_green]󰥔 %H:%M "
set -ga status-right "#[fg=$thm_lavender,bg=$thm_bg]#{?client_prefix,#[fg=$thm_red]󰘳 ,}#[fg=$thm_mauve] #S "

# ------------------------------------------------------------------------------
# Window & Pane Behavior
# ------------------------------------------------------------------------------
setw -g automatic-rename on      # Rename windows to current process
setw -g automatic-rename-format "#{b:pane_current_command}"
set -g renumber-windows on       # Keep window numbers consistent
set -g base-index 1              # Start window numbering at 1
set -g pane-base-index 1         # Start pane numbering at 1


# Pane Styling
set -g pane-border-style "fg=$thm_overlay_0"
set -g pane-active-border-style "fg=$thm_lavender"


# ------------------------------------------------------------------------------
# Neovim/Vim Integration
# ------------------------------------------------------------------------------
# Synchronize pane navigation with Vim splits
# bind -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)n?vim$' && tmux send-keys C-h) || tmux select-pane -L"
# bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)n?vim$' && tmux send-keys C-j) || tmux select-pane -D"
# bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)n?vim$' && tmux send-keys C-k) || tmux select-pane -U"
# bind -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)n?vim$' && tmux send-keys C-l) || tmux select-pane -R"

# Copy mode Keybindings
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi C-v send-keys -X rectangle-toggle
bind-key -T copy-mode-vi y send-keys -X copy-selection-and-cancel
#Copy mode
# bind v copy-mode
# bind -T copy-mode-vi v send-keys -X begin-selection
# bind -T copy-mode-vi C-v send-keys -X rectangle-toggle
# bind -T copy-mode-vi y send-keys -X copy-selection-and-cancel
# bind -T copy-mode-vi Escape send -X cancel
# bind -T copy-mode-vi H send -X start-of-line
# bind -T copy-mode-vi L send -X end-of-line

# Use Enter in copy-mode to copy to system clipboard via xclip
# bind-key -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "xclip -in -selection clipboard"
# bind-key -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel 

# Sync tmux clipboard with system clipboard using xclip for mouse selections
# bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel
# bind-key -T copy-mode-vi C-v send-keys -X copy-pipe-and-cancel

# ------------------------------------------------------------------------------
# Quality of Life Improvements
# ------------------------------------------------------------------------------
set -g mouse on                  # Enable mouse support for pane/window management
set -g set-clipboard on	         # use system clipboard
setw -g mode-keys vi             # Use vi keys in copy mode
set -g history-limit 100000      # Increase scrollback buffer size
set -g display-time 3000         # Increase command feedback duration
set -g visual-activity off       # Disable annoying activity alerts
set -g allow-passthrough on		 # Image preview within TMUX - (yazi)

# Quick config reload (Meta + r)
bind r source-file ~/.config/tmux/tmux.conf \; display "Configuration reloaded!"

